in_source: |-
  ( defvar W " W " )
  ( defvar h " h " )
  ( defvar a " a " )
  ( defvar t " t " )
  ( defvar i " i " )
  ( defvar s " s " )
  ( defvar tab " " )
  ( defvar y " y " )
  ( defvar o " o " )
  ( defvar u " u " )
  ( defvar r " r " )
  ( defvar n " n " )
  ( defvar m " m " )
  ( defvar e " e " )
  ( defvar quest " ? " )
  ( defvar tran " \n " )

  ( defvar H " H " )
  ( defvar l " l " )
  ( defvar comma " , " )
  ( defvar exclam " ! " )


  ( format f W )
  ( format f h )
  ( format f a )
  ( format f t )
  ( format f tab )
  ( format f i )
  ( format f s )
  ( format f tab )
  ( format f y )
  ( format f o )
  ( format f u )
  ( format f r )
  ( format f tab )
  ( format f n )
  ( format f a )
  ( format f m )
  ( format f e )
  ( format f quest )
  ( format f tran )


  ( format f H )
  ( format f e )
  ( format f l )
  ( format f l )
  ( format f o )
  ( format f comma )
  ( format f tab )

  ( defvar name )
  ( loop
      ( setq name ( read ) )
      ( format f name )
  )

  ( format f exclam )
in_stdin: |-
  Alice
out_code: |-
  [{"opcode": "movv", "arg": ["$0", " "]},
   {"opcode": "movv", "arg": ["$0", "$52"]},
   {"opcode": "movv", "arg": ["$69", "$0"]},
   {"opcode": "jp", "arg": [1]},
   {"opcode": "halt"},
   {"opcode": "movv", "arg": ["$5", "h"]},
   {"opcode": "movv", "arg": ["$6", "e"]},
   {"opcode": "movv", "arg": ["$7", "l"]},
   {"opcode": "movv", "arg": ["$8", "o"]},
   {"opcode": "movv", "arg": ["$9", " "]},
   {"opcode": "movv", "arg": ["$10", "w"]},
   {"opcode": "movv", "arg": ["$11", "r"]},
   {"opcode": "movv", "arg": ["$12", "d"]},
   {"opcode": "movv", "arg": ["$69", "$5"]},
   {"opcode": "movv", "arg": ["$69", "$6"]},
   {"opcode": "movv", "arg": ["$69", "$7"]},
   {"opcode": "movv", "arg": ["$69", "$7"]},
   {"opcode": "movv", "arg": ["$69", "$8"]},
   {"opcode": "movv", "arg": ["$69", "$9"]},
   {"opcode": "movv", "arg": ["$69", "$10"]},
   {"opcode": "movv", "arg": ["$69", "$8"]},
   {"opcode": "movv", "arg": ["$69", "$11"]},
   {"opcode": "movv", "arg": ["$69", "$7"]},
   {"opcode": "movv", "arg": ["$69", "$12"]},
   {"opcode": "halt"},
   {"opcode": "movv", "arg": ["$25", "W"]},
   {"opcode": "movv", "arg": ["$26", "h"]},
   {"opcode": "movv", "arg": ["$27", "a"]},
   {"opcode": "movv", "arg": ["$28", "t"]},
   {"opcode": "movv", "arg": ["$29", "i"]},
   {"opcode": "movv", "arg": ["$30", "s"]},
   {"opcode": "movv", "arg": ["$31", " "]},
   {"opcode": "movv", "arg": ["$32", "y"]},
   {"opcode": "movv", "arg": ["$33", "o"]},
   {"opcode": "movv", "arg": ["$34", "u"]},
   {"opcode": "movv", "arg": ["$35", "r"]},
   {"opcode": "movv", "arg": ["$36", "n"]},
   {"opcode": "movv", "arg": ["$37", "m"]},
   {"opcode": "movv", "arg": ["$38", "e"]},
   {"opcode": "movv", "arg": ["$39", "?"]},
   {"opcode": "movv", "arg": ["$40", "\n"]},
   {"opcode": "movv", "arg": ["$41", "H"]},
   {"opcode": "movv", "arg": ["$42", "l"]},
   {"opcode": "movv", "arg": ["$43", ","]},
   {"opcode": "movv", "arg": ["$44", "!"]},
   {"opcode": "movv", "arg": ["$69", "$25"]},
   {"opcode": "movv", "arg": ["$69", "$26"]},
   {"opcode": "movv", "arg": ["$69", "$27"]},
   {"opcode": "movv", "arg": ["$69", "$28"]},
   {"opcode": "movv", "arg": ["$69", "$31"]},
   {"opcode": "movv", "arg": ["$69", "$29"]},
   {"opcode": "movv", "arg": ["$69", "$30"]},
   {"opcode": "movv", "arg": ["$69", "$31"]},
   {"opcode": "movv", "arg": ["$69", "$32"]},
   {"opcode": "movv", "arg": ["$69", "$33"]},
   {"opcode": "movv", "arg": ["$69", "$34"]},
   {"opcode": "movv", "arg": ["$69", "$35"]},
   {"opcode": "movv", "arg": ["$69", "$31"]},
   {"opcode": "movv", "arg": ["$69", "$36"]},
   {"opcode": "movv", "arg": ["$69", "$27"]},
   {"opcode": "movv", "arg": ["$69", "$37"]},
   {"opcode": "movv", "arg": ["$69", "$38"]},
   {"opcode": "movv", "arg": ["$69", "$39"]},
   {"opcode": "movv", "arg": ["$69", "$40"]},
   {"opcode": "movv", "arg": ["$69", "$41"]},
   {"opcode": "movv", "arg": ["$69", "$38"]},
   {"opcode": "movv", "arg": ["$69", "$42"]},
   {"opcode": "movv", "arg": ["$69", "$42"]},
   {"opcode": "movv", "arg": ["$69", "$33"]},
   {"opcode": "movv", "arg": ["$69", "$43"]},
   {"opcode": "movv", "arg": ["$69", "$31"]},
   {"opcode": "movv", "arg": ["$71", " "]},
   {"opcode": "movv", "arg": ["$71", "$52"]},
   {"opcode": "movv", "arg": ["$69", "$71"]},
   {"opcode": "jp", "arg": [72]},
   {"opcode": "movv", "arg": ["$69", "$44"]},
   {"opcode": "halt"}]
out_stdout: |
  source LoC: 293 code instr: 77
  ============================================================
  Alice
  instr_counter: 17  ticks: 85
out_log: |
  DEBUG   machine:simulation    {TICK: 0, PC: 0, ADDR: 0, MEM_OUT: 0, AC: 0, DR: 0} movv ['$0', ' ']
  DEBUG   machine:tick          {TICK: 1, PC: 0, ADDR: 0, MEM_OUT: 0, AC: 0, DR: 0} movv ['$0', ' ']
  DEBUG   machine:tick          {TICK: 2, PC: 0, ADDR: 0, MEM_OUT: 0, AC: 0, DR: 32} movv ['$0', ' ']
  DEBUG   machine:tick          {TICK: 3, PC: 0, ADDR: 0, MEM_OUT: 0, AC: 32, DR: 32} movv ['$0', ' ']
  DEBUG   machine:write         input: ' '
  DEBUG   machine:tick          {TICK: 4, PC: 0, ADDR: 0, MEM_OUT: 32, AC: 32, DR: 32} movv ['$0', ' ']
  DEBUG   machine:tick          {TICK: 5, PC: 1, ADDR: 52, MEM_OUT: 65, AC: 32, DR: 32} movv ['$0', '$52']
  DEBUG   machine:tick          {TICK: 6, PC: 1, ADDR: 52, MEM_OUT: 65, AC: 32, DR: 65} movv ['$0', '$52']
  DEBUG   machine:tick          {TICK: 7, PC: 1, ADDR: 0, MEM_OUT: 32, AC: 32, DR: 65} movv ['$0', '$52']
  DEBUG   machine:tick          {TICK: 8, PC: 1, ADDR: 0, MEM_OUT: 32, AC: 32, DR: 65} movv ['$0', '$52']
  DEBUG   machine:tick          {TICK: 9, PC: 1, ADDR: 0, MEM_OUT: 32, AC: 65, DR: 65} movv ['$0', '$52']
  DEBUG   machine:write         input: 'A'
  DEBUG   machine:tick          {TICK: 10, PC: 1, ADDR: 0, MEM_OUT: 65, AC: 65, DR: 65} movv ['$0', '$52']
  DEBUG   machine:tick          {TICK: 11, PC: 2, ADDR: 0, MEM_OUT: 65, AC: 65, DR: 65} movv ['$69', '$0']
  DEBUG   machine:tick          {TICK: 12, PC: 2, ADDR: 0, MEM_OUT: 65, AC: 65, DR: 65} movv ['$69', '$0']
  DEBUG   machine:tick          {TICK: 13, PC: 2, ADDR: 69, MEM_OUT: 0, AC: 65, DR: 65} movv ['$69', '$0']
  DEBUG   machine:tick          {TICK: 14, PC: 2, ADDR: 69, MEM_OUT: 0, AC: 65, DR: 65} movv ['$69', '$0']
  DEBUG   machine:tick          {TICK: 15, PC: 2, ADDR: 69, MEM_OUT: 0, AC: 65, DR: 65} movv ['$69', '$0']
  DEBUG   machine:write         output: '' << 'A'
  DEBUG   machine:tick          {TICK: 16, PC: 2, ADDR: 69, MEM_OUT: 65, AC: 65, DR: 65} movv ['$69', '$0']
  DEBUG   machine:tick          {TICK: 17, PC: 3, ADDR: 69, MEM_OUT: 65, AC: 65, DR: 65} jp [1]
  DEBUG   machine:tick          {TICK: 18, PC: 1, ADDR: 69, MEM_OUT: 65, AC: 65, DR: 65} movv ['$0', '$52']
  DEBUG   machine:tick          {TICK: 19, PC: 1, ADDR: 53, MEM_OUT: 108, AC: 65, DR: 65} movv ['$0', '$52']
  DEBUG   machine:tick          {TICK: 20, PC: 1, ADDR: 53, MEM_OUT: 108, AC: 65, DR: 108} movv ['$0', '$52']
  DEBUG   machine:tick          {TICK: 21, PC: 1, ADDR: 0, MEM_OUT: 65, AC: 65, DR: 108} movv ['$0', '$52']
  DEBUG   machine:tick          {TICK: 22, PC: 1, ADDR: 0, MEM_OUT: 65, AC: 65, DR: 108} movv ['$0', '$52']
  DEBUG   machine:tick          {TICK: 23, PC: 1, ADDR: 0, MEM_OUT: 65, AC: 108, DR: 108} movv ['$0', '$52']
  DEBUG   machine:write         input: 'l'
  DEBUG   machine:tick          {TICK: 24, PC: 1, ADDR: 0, MEM_OUT: 108, AC: 108, DR: 108} movv ['$0', '$52']
  DEBUG   machine:tick          {TICK: 25, PC: 2, ADDR: 0, MEM_OUT: 108, AC: 108, DR: 108} movv ['$69', '$0']
  DEBUG   machine:tick          {TICK: 26, PC: 2, ADDR: 0, MEM_OUT: 108, AC: 108, DR: 108} movv ['$69', '$0']
  DEBUG   machine:tick          {TICK: 27, PC: 2, ADDR: 70, MEM_OUT: 0, AC: 108, DR: 108} movv ['$69', '$0']
  DEBUG   machine:tick          {TICK: 28, PC: 2, ADDR: 70, MEM_OUT: 0, AC: 108, DR: 108} movv ['$69', '$0']
  DEBUG   machine:tick          {TICK: 29, PC: 2, ADDR: 70, MEM_OUT: 0, AC: 108, DR: 108} movv ['$69', '$0']
  DEBUG   machine:write         output: 'A' << 'l'
  DEBUG   machine:tick          {TICK: 30, PC: 2, ADDR: 70, MEM_OUT: 108, AC: 108, DR: 108} movv ['$69', '$0']
  DEBUG   machine:tick          {TICK: 31, PC: 3, ADDR: 70, MEM_OUT: 108, AC: 108, DR: 108} jp [1]
  DEBUG   machine:tick          {TICK: 32, PC: 1, ADDR: 70, MEM_OUT: 108, AC: 108, DR: 108} movv ['$0', '$52']
  DEBUG   machine:tick          {TICK: 33, PC: 1, ADDR: 54, MEM_OUT: 105, AC: 108, DR: 108} movv ['$0', '$52']
  DEBUG   machine:tick          {TICK: 34, PC: 1, ADDR: 54, MEM_OUT: 105, AC: 108, DR: 105} movv ['$0', '$52']
  DEBUG   machine:tick          {TICK: 35, PC: 1, ADDR: 0, MEM_OUT: 108, AC: 108, DR: 105} movv ['$0', '$52']
  DEBUG   machine:tick          {TICK: 36, PC: 1, ADDR: 0, MEM_OUT: 108, AC: 108, DR: 105} movv ['$0', '$52']
  DEBUG   machine:tick          {TICK: 37, PC: 1, ADDR: 0, MEM_OUT: 108, AC: 105, DR: 105} movv ['$0', '$52']
  DEBUG   machine:write         input: 'i'
  DEBUG   machine:tick          {TICK: 38, PC: 1, ADDR: 0, MEM_OUT: 105, AC: 105, DR: 105} movv ['$0', '$52']
  DEBUG   machine:tick          {TICK: 39, PC: 2, ADDR: 0, MEM_OUT: 105, AC: 105, DR: 105} movv ['$69', '$0']
  DEBUG   machine:tick          {TICK: 40, PC: 2, ADDR: 0, MEM_OUT: 105, AC: 105, DR: 105} movv ['$69', '$0']
  DEBUG   machine:tick          {TICK: 41, PC: 2, ADDR: 71, MEM_OUT: 0, AC: 105, DR: 105} movv ['$69', '$0']
  DEBUG   machine:tick          {TICK: 42, PC: 2, ADDR: 71, MEM_OUT: 0, AC: 105, DR: 105} movv ['$69', '$0']
  DEBUG   machine:tick          {TICK: 43, PC: 2, ADDR: 71, MEM_OUT: 0, AC: 105, DR: 105} movv ['$69', '$0']
  DEBUG   machine:write         output: 'Al' << 'i'
  DEBUG   machine:tick          {TICK: 44, PC: 2, ADDR: 71, MEM_OUT: 105, AC: 105, DR: 105} movv ['$69', '$0']
  DEBUG   machine:tick          {TICK: 45, PC: 3, ADDR: 71, MEM_OUT: 105, AC: 105, DR: 105} jp [1]
  DEBUG   machine:tick          {TICK: 46, PC: 1, ADDR: 71, MEM_OUT: 105, AC: 105, DR: 105} movv ['$0', '$52']
  DEBUG   machine:tick          {TICK: 47, PC: 1, ADDR: 55, MEM_OUT: 99, AC: 105, DR: 105} movv ['$0', '$52']
  DEBUG   machine:tick          {TICK: 48, PC: 1, ADDR: 55, MEM_OUT: 99, AC: 105, DR: 99} movv ['$0', '$52']
  DEBUG   machine:tick          {TICK: 49, PC: 1, ADDR: 0, MEM_OUT: 105, AC: 105, DR: 99} movv ['$0', '$52']
  DEBUG   machine:tick          {TICK: 50, PC: 1, ADDR: 0, MEM_OUT: 105, AC: 105, DR: 99} movv ['$0', '$52']
  DEBUG   machine:tick          {TICK: 51, PC: 1, ADDR: 0, MEM_OUT: 105, AC: 99, DR: 99} movv ['$0', '$52']
  DEBUG   machine:write         input: 'c'
  DEBUG   machine:tick          {TICK: 52, PC: 1, ADDR: 0, MEM_OUT: 99, AC: 99, DR: 99} movv ['$0', '$52']
  DEBUG   machine:tick          {TICK: 53, PC: 2, ADDR: 0, MEM_OUT: 99, AC: 99, DR: 99} movv ['$69', '$0']
  DEBUG   machine:tick          {TICK: 54, PC: 2, ADDR: 0, MEM_OUT: 99, AC: 99, DR: 99} movv ['$69', '$0']
  DEBUG   machine:tick          {TICK: 55, PC: 2, ADDR: 72, MEM_OUT: 0, AC: 99, DR: 99} movv ['$69', '$0']
  DEBUG   machine:tick          {TICK: 56, PC: 2, ADDR: 72, MEM_OUT: 0, AC: 99, DR: 99} movv ['$69', '$0']
  DEBUG   machine:tick          {TICK: 57, PC: 2, ADDR: 72, MEM_OUT: 0, AC: 99, DR: 99} movv ['$69', '$0']
  DEBUG   machine:write         output: 'Ali' << 'c'
  DEBUG   machine:tick          {TICK: 58, PC: 2, ADDR: 72, MEM_OUT: 99, AC: 99, DR: 99} movv ['$69', '$0']
  DEBUG   machine:tick          {TICK: 59, PC: 3, ADDR: 72, MEM_OUT: 99, AC: 99, DR: 99} jp [1]
  DEBUG   machine:tick          {TICK: 60, PC: 1, ADDR: 72, MEM_OUT: 99, AC: 99, DR: 99} movv ['$0', '$52']
  DEBUG   machine:tick          {TICK: 61, PC: 1, ADDR: 56, MEM_OUT: 101, AC: 99, DR: 99} movv ['$0', '$52']
  DEBUG   machine:tick          {TICK: 62, PC: 1, ADDR: 56, MEM_OUT: 101, AC: 99, DR: 101} movv ['$0', '$52']
  DEBUG   machine:tick          {TICK: 63, PC: 1, ADDR: 0, MEM_OUT: 99, AC: 99, DR: 101} movv ['$0', '$52']
  DEBUG   machine:tick          {TICK: 64, PC: 1, ADDR: 0, MEM_OUT: 99, AC: 99, DR: 101} movv ['$0', '$52']
  DEBUG   machine:tick          {TICK: 65, PC: 1, ADDR: 0, MEM_OUT: 99, AC: 101, DR: 101} movv ['$0', '$52']
  DEBUG   machine:write         input: 'e'
  DEBUG   machine:tick          {TICK: 66, PC: 1, ADDR: 0, MEM_OUT: 101, AC: 101, DR: 101} movv ['$0', '$52']
  DEBUG   machine:tick          {TICK: 67, PC: 2, ADDR: 0, MEM_OUT: 101, AC: 101, DR: 101} movv ['$69', '$0']
  DEBUG   machine:tick          {TICK: 68, PC: 2, ADDR: 0, MEM_OUT: 101, AC: 101, DR: 101} movv ['$69', '$0']
  DEBUG   machine:tick          {TICK: 69, PC: 2, ADDR: 73, MEM_OUT: 0, AC: 101, DR: 101} movv ['$69', '$0']
  DEBUG   machine:tick          {TICK: 70, PC: 2, ADDR: 73, MEM_OUT: 0, AC: 101, DR: 101} movv ['$69', '$0']
  DEBUG   machine:tick          {TICK: 71, PC: 2, ADDR: 73, MEM_OUT: 0, AC: 101, DR: 101} movv ['$69', '$0']
  DEBUG   machine:write         output: 'Alic' << 'e'
  DEBUG   machine:tick          {TICK: 72, PC: 2, ADDR: 73, MEM_OUT: 101, AC: 101, DR: 101} movv ['$69', '$0']
  DEBUG   machine:tick          {TICK: 73, PC: 3, ADDR: 73, MEM_OUT: 101, AC: 101, DR: 101} jp [1]
  DEBUG   machine:tick          {TICK: 74, PC: 1, ADDR: 73, MEM_OUT: 101, AC: 101, DR: 101} movv ['$0', '$52']
  DEBUG   machine:tick          {TICK: 75, PC: 1, ADDR: 57, MEM_OUT: 0, AC: 101, DR: 101} movv ['$0', '$52']
  DEBUG   machine:tick          {TICK: 76, PC: 1, ADDR: 57, MEM_OUT: 0, AC: 101, DR: 0} movv ['$0', '$52']
  DEBUG   machine:tick          {TICK: 77, PC: 1, ADDR: 0, MEM_OUT: 101, AC: 101, DR: 0} movv ['$0', '$52']
  DEBUG   machine:tick          {TICK: 78, PC: 1, ADDR: 0, MEM_OUT: 101, AC: 101, DR: 0} movv ['$0', '$52']
  DEBUG   machine:tick          {TICK: 79, PC: 1, ADDR: 0, MEM_OUT: 101, AC: 0, DR: 0} movv ['$0', '$52']
  DEBUG   machine:write         input: '\x00'
  DEBUG   machine:tick          {TICK: 80, PC: 1, ADDR: 0, MEM_OUT: 0, AC: 0, DR: 0} movv ['$0', '$52']
  DEBUG   machine:tick          {TICK: 81, PC: 2, ADDR: 0, MEM_OUT: 0, AC: 0, DR: 0} movv ['$69', '$0']
  DEBUG   machine:tick          {TICK: 82, PC: 2, ADDR: 0, MEM_OUT: 0, AC: 0, DR: 0} movv ['$69', '$0']
  DEBUG   machine:tick          {TICK: 83, PC: 2, ADDR: 74, MEM_OUT: 0, AC: 0, DR: 0} movv ['$69', '$0']
  DEBUG   machine:tick          {TICK: 84, PC: 2, ADDR: 74, MEM_OUT: 0, AC: 0, DR: 0} movv ['$69', '$0']
  DEBUG   machine:tick          {TICK: 85, PC: 2, ADDR: 74, MEM_OUT: 0, AC: 0, DR: 0} movv ['$69', '$0']
  INFO    machine:write         input_buffer: < Alice
  WARNING machine:simulation    Input buffer is empty!
  INFO    machine:simulation    output_buffer: > 'Alice'
